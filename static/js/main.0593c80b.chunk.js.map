{"version":3,"sources":["assets/images/logoku.png","assets/images/food.jpg","components/Navbar.js","components/Footer/Footer.js","components/ImageAndWelcome.js","components/SearchCity.js","components/CityCard.js","components/CityList.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo1","Footer","href","ImageAndWelcome","style","marginBottom","mainImage","width","alt","SearchCity","props","type","placeholder","value","onChange","onClick","onClickSearch","cityCard","city","name","country_name","id","_renderCityList","cities","length","map","CityCard","key","CityList","title","showSubtitle","subtitle","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchhandler","state","url","axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","searchHandler","restaurants","entity_id","entity_type","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriahandler","splice","getCategoriesData","renderRestaurantList","match","RestaurantProfile","class","featured_image","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getReviewsData","restaurant_id","res_id","reviews","user_reviews","getRestaurantData","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.0593c80b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoku.7230973e.png\";","module.exports = __webpack_public_path__ + \"static/media/food.5a7cfcfc.jpg\";","import React from \"react\";\r\nimport logo1 from \"../assets/images/logoku.png\";\r\nimport {Link} from \"react-router-dom\"; \r\n\r\nconst Navbar = () =>(\r\n\r\n    <nav className=\"navbar navbar-expand-md fixed-top navbar-dark bg-success sticky-top\" >\r\n    <Link className=\"navbar-brand\" to=\"/kuliner/\"><img src={logo1}></img></Link>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer bg-success\">\r\n        <div className=\"text-center\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>About Toko Kuliner</h5>\r\n                        <ul>\r\n                            <li><a href=\"/#\">About</a></li>\r\n                            <li><a href=\"/#\">Contact Us</a></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Support</h5>\r\n                        <ul>\r\n                            <li><a href=\"/#\">FAQ</a></li>\r\n                            <li><a href=\"/#\">Help Desk</a></li>\r\n                            <li><a href=\"/#\">Forums</a></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Download Apps</h5>\r\n                        <ul>\r\n                            <li><a href=\"/#\">Goggle Play</a></li>\r\n                            <li><a href=\"/#\">App Store</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"social-networks\">\r\n                <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n                <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n                <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\r\n            </div>\r\n            <p className=\"footer-copyright bg-primary\">Copyright &copy; 2020 Ainul idham</p>\r\n        </div>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\r\nimport mainImage from \"../assets/images/food.jpg\";\r\n\r\nconst ImageAndWelcome = () =>(\r\n    <>\r\n    <div className=\"row\" style={{ marginBottom: 30}}>\r\n        <img src={mainImage} width=\"99%\" alt=\"Aneka Makanan\"></img>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n            <div className=\"card text-white bg-success mb-3 text-center\">\r\n              <div className=\"card-header\"><h1>Welcome to Toko Kuliner</h1></div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\r\n                <p className=\"card-text\">You can grab information about restaurants, cafees, cuisine with just a few click.</p>\r\n                <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n);\r\n\r\nexport default ImageAndWelcome;","import React from 'react';\r\n\r\nconst SearchCity = (props) => (\r\n    <div className=\"row\" style={{marginBottom: 30}}>\r\n    <div className=\"col\">\r\n    <h3>Search City</h3>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-11\">\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Type keyword or city name..\" value={props.value} onChange={props.onChange}/>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <button className=\"btn btn-success\" type=\"button\" onClick={props.onClickSearch}><i className=\"fa fa-search fa-1x\"></i>Search</button>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default SearchCity;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst cityCard = (props) => (\r\n            <div className=\"col-4\">\r\n                <div className=\"card bg-light mb-3\">\r\n                    <div className=\"card-body\">\r\n                      <h3 className=\"card-title\">{props.city.name}</h3>\r\n                      <p>{props.city.country_name}</p>\r\n                      <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n);\r\n\r\nexport default cityCard;","import React from 'react';\r\nimport CityCard from \"./CityCard\";\r\n\r\nconst CityList = (props) =>(\r\n<>\r\n    <div className=\"row\">\r\n          <div className=\"col-12\">\r\n              <h3>{props.title}</h3>\r\n              {props.showSubtitle === true && props.subtitle != '' && \r\n                <h6 className=\"text-muted\">Search result for keyword : ' {props.subtitle} '</h6>\r\n              }\r\n          </div>\r\n        </div>\r\n    <div className=\"row\">\r\n            {props.cities == null ? (\r\n                <div className=\"col\">\r\n                    <p>Loading ...</p>\r\n                </div>    \r\n            ): (\r\n                _renderCityList(props.cities)\r\n            )}\r\n    </div>\r\n</>\r\n);\r\n\r\n\r\nconst _renderCityList = (cities) => {\r\n    if(cities.length > 0) {\r\n        return cities.map(city => \r\n            <CityCard key={city.id} city={city} />\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"col\">\r\n                <p className=\"text-danger\">\r\n                    Data not found !!!\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default CityList;","export const API = {\r\n    zomato: {\r\n        baseUrl: \"https://developers.zomato.com/api/v2.1\",\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ImageAndWelcome from \"../components/ImageAndWelcome\";\r\nimport SearchCity from \"../components/SearchCity\";\r\nimport CityList from \"../components/CityList\";\r\nimport axios from \"axios\";\r\nimport {API} from \"../config/api\";\r\n\r\nclass Home extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          keyword: \"\",\r\n          featuredCities: null, \r\n          citiesResultSearch: null,\r\n          cityKeywordSearch: \"\"\r\n        };\r\n      }\r\n      \r\n      changeKeywordHandler = event => {\r\n        this.setState({keyword: event.target.value});\r\n      };\r\n      searchhandler = () => {\r\n          let keyword = this.state.keyword;\r\n          var url = `${API.zomato.baseUrl}/cities`;\r\n          axios.get(url, {\r\n              headers: {\r\n                  \"user-key\": API.zomato.api_key\r\n              },\r\n              params: {\r\n                  q: keyword\r\n              }\r\n          }).then(({data}) => {\r\n              if(data.status === \"success\"){\r\n                  this.setState({citiesResultSearch: data.location_suggestions, keyword: \"\", cityKeywordSearch: keyword})\r\n              }\r\n          }).catch(err => console.log(err))\r\n      }\r\n      getFeaturedCities = () => {\r\n        var url = `${API.zomato.baseUrl}/cities`;\r\n        axios.get(url, {\r\n            headers: {\r\n                \"user-key\": API.zomato.api_key         \r\n            },\r\n            params: {\r\n                city_ids: \"74,11052,170\"\r\n            }\r\n        }).then(({data}) => {\r\n            if (data.status === \"success\") {\r\n                this.setState({featuredCities: data.location_suggestions})\r\n            }\r\n        }).catch(err => console.log(err))\r\n\r\n      };\r\n      componentDidMount() {\r\n          this.getFeaturedCities();\r\n      }\r\n    render(){\r\n        const citiesDummy = [\r\n            {id:  72, name: \"Jakarta\", country_name: \"indonesia\" },\r\n            {id: 11052, name: \"Bandung\", country_name: \"indonesia\"},\r\n            {id: 170, name: \"Bali\", country_name: \"indonesia\"}\r\n          ];\r\n        return (\r\n         <>   \r\n        <ImageAndWelcome />\r\n        <div className=\"container\" style={{marginTop: 30, marginBottom: 30}}>\r\n          <CityList cities={this.state.featuredCities}  title={'Featured Cities'}/>\r\n          <SearchCity value={this.state.keyword} onChange={this.changeKeywordHandler} onClickSearch={this.searchhandler}/>   \r\n          {this.state.cityKeywordSearch !== '' && (\r\n              <CityList title={'Search Result'} cities={this.state.citiesResultSearch} showSubtitle={true} subtitle={this.state.cityKeywordSearch}/>\r\n          )}\r\n          \r\n        </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst CategoryList = props => (\r\n\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n            {props.categories.map(category => (\r\n                <button key={category.id} \r\n                className={\" list-group-item list-group-item-action \" + (props.categorySelected && props.categorySelected.id === category.id ? \"active\" : \"\")} \r\n                onClick={() => props.categoryClickHandler(category)}>\r\n                    {category.name}\r\n                 </button>\r\n            ))}\r\n        </div>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    )\r\n)\r\n\r\nexport default CategoryList;","import React from \"react\";\r\n\r\n\r\nconst SearchKeyword = props => (\r\n    <>     \r\n        <h5>Keyword</h5>\r\n          <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-10\">\r\n                            <input className=\"form-control\" type=\"text\" placeholder=\"Type keyword i.e: restaurant's name, location, cuisine, etc. \"\r\n                            value={props.keyword} onChange={props.changeKeywordHandler}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button onClick={props.onClickAddToCriteria} className=\"btn btn-success\" type=\"button\">\r\n                                Add to criteria\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </>\r\n)\r\n\r\nexport default SearchKeyword;","import React from 'react';\r\n\r\nconst SearchCriteria = props => (\r\n\r\n    <div className=\"card bg-light mb-3\" style={{marginTop: 20}}>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-title\">Find Restaurants based on criteria: </p>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {props.criteria.map((cri, index) => (\r\n                        <tr key={index} className=\"table-active\">\r\n                            <td width=\"40%\">{cri.criteriaName}</td>\r\n                            <td width=\"50%\">{cri.data.name}</td>\r\n                            <td width=\"10%\">\r\n                                {cri.criteriaName !== \"City\" && (\r\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\" style={{color: 'red'}} onClick={() => props.removeCriteriaHandler(index)}/>\r\n                                )}\r\n                            </td>\r\n                         </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"pull-right\">\r\n                    <button className=\"btn btn-success\" type=\"button\" onClick={props.onClickSearch}>Search</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\nexport default SearchCriteria;","import React from 'react';\r\n\r\nconst RatingLabel = props =>(\r\n\r\n    <div className=\"btn btn-sm\" style={{ color: 'white', backgroundColor: `#${props.labelColor}`,\r\n    borderColor: `#${props.labelColor}`}}>                                 \r\n\r\n    {props.text}\r\n\r\n    </div>\r\n\r\n)\r\n\r\nexport default RatingLabel;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport RatingLabel from '../components/RatingLabel';\r\n\r\nconst RestaurantCard = props => (\r\n\r\n    <div className=\"col-6\" style={{marginBottom: 20}}>\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n            <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <img className=\"img-responsive\" src={props.restaurant.thumb} style={{borderRadius: 5, width: 100 }}/>\r\n            </div>\r\n            <div className= \"col-9\">\r\n                <h4 className=\"text-success\" style={{fontWeight: 800}}>{props.restaurant.name}</h4>\r\n                <h6>{props.restaurant.location.locality}</h6>\r\n                <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n            </div>   \r\n            </div>   \r\n            </div>\r\n\r\n        <div className=\"card-body\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Rating</td>\r\n                        <td>\r\n                           <RatingLabel labelColor={props.restaurant.user_rating.rating_color}\r\n                           text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                           />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Cuisines</td>\r\n                        <td>{props.restaurant.cuisines}</td>      \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Cost for two</td>\r\n                        <td>\r\n                            {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n         \r\n        <div className=\"card-footer\">\r\n            <Link to={`/restaurant/${props.restaurant.id}`} style={{textDecoration: 'none'}}>\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n                    View Restaurant Details\r\n                </button>\r\n            </Link>              \r\n        </div>\r\n        </div>    \r\n    </div> \r\n\r\n)\r\n\r\nexport default RestaurantCard;","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport CategoryList from \"../components/CategoryList\";\r\nimport SearchKeyword from \"../components/SearchKeyword\";\r\nimport SearchCriteria from \"../components/SearchCriteria\";\r\nimport RestaurantCard from \"../components/RestaurantCard\";\r\n\r\nconst categoriesDummy = [\r\n    {\r\n      \"categories\": {\r\n        \"id\": 1,\r\n        \"name\": \"Delivery\"\r\n      }\r\n    },\r\n    {\r\n      \"categories\": {\r\n        \"id\": 2,\r\n        \"name\": \"Dine-out\"\r\n      }\r\n    },\r\n    {\r\n      \"categories\": {\r\n        \"id\": 3,\r\n        \"name\": \"Nightlife\"\r\n      }\r\n    },\r\n    {\r\n      \"categories\": {\r\n        \"id\": 4,\r\n        \"name\": \"Catching-up\"\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  const restaurants = [\r\n    {\r\n      \"restaurant\": {\r\n        \"id\": \"18875696\",\r\n        \"name\": \"Kintaro Sushi\",\r\n        \"location\": {\r\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          \"locality\": \"Senopati\",\r\n        },\r\n        \"cuisines\": \"Sushi, Japanese\",\r\n        \"average_cost_for_two\": 200000,\r\n        \"currency\": \"IDR\",\r\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        \"user_rating\": {\r\n          \"aggregate_rating\": \"4.9\",\r\n          \"rating_text\": \"Excellent\",\r\n          \"rating_color\": \"3F7E00\",\r\n          \"votes\": \"1358\"\r\n        },\r\n      }\r\n    },\r\n    {\r\n      \"restaurant\": {\r\n        \"id\": \"18875696\",\r\n        \"name\": \"Kintaro Sushi\",\r\n        \"location\": {\r\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          \"locality\": \"Senopati\",\r\n        },\r\n        \"cuisines\": \"Sushi, Japanese\",\r\n        \"average_cost_for_two\": 200000,\r\n        \"currency\": \"IDR\",\r\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        \"user_rating\": {\r\n          \"aggregate_rating\": \"4.9\",\r\n          \"rating_text\": \"Excellent\",\r\n          \"rating_color\": \"3F7E00\",\r\n          \"votes\": \"1358\"\r\n        },\r\n      }\r\n    }\r\n  ]; \r\n\r\nclass City extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword: \"\", \r\n            criteria: [],\r\n            restaurants: []\r\n        };\r\n    }\r\n\r\n    searchHandler = () =>{\r\n        this.setState({restaurants: null})\r\n        let url = `${API.zomato.baseUrl}/search`\r\n        let params = {}\r\n\r\n        for (let cri of this.state.criteria){\r\n            switch(cri.criteriaName) {\r\n                case 'City':\r\n                    params.entity_id = cri.data.id\r\n                    params.entity_type = 'city'\r\n                    break;\r\n                case 'Category':\r\n                    params.category = cri.data.id\r\n                    break;\r\n                case 'Keyword':\r\n                    params.q = cri.data.name\r\n                    break;\r\n                default :  break;       \r\n            }\r\n        }\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params \r\n        })\r\n        .then(({data}) => {\r\n            this.setState({restaurants: data.restaurants})\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    transformCategoriesData = categories => {\r\n        let categoriesTransformed = categories.map(category =>{\r\n            return category.categories;\r\n        });\r\n        return categoriesTransformed;\r\n    };\r\n\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: `${city_id}`\r\n            }\r\n        })\r\n        .then(({data}) => {\r\n            let city = data.location_suggestions[0];\r\n            \r\n            let newCriteria = {\r\n                criteriaName: 'City',\r\n                data: city\r\n            }\r\n\r\n            let criteria = [...this.state.criteria]\r\n            criteria.push(newCriteria);\r\n\r\n            this.setState({city, criteria});\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    componentDidMount() {\r\n        let {city_id} = this.props.match.params;\r\n        console.log(this.props.match);\r\n        this.getCityData(city_id);\r\n        this.getCategoriesData();\r\n    }\r\n\r\n    categoryClickHandler = (category) => {\r\n        let criteria = [...this.state.criteria];\r\n        criteria = criteria.filter(cri => cri.criteriaName !== \"Category\");\r\n        let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n        };\r\n        criteria.push(newCriteria);\r\n        this.setState({categorySelected: category, criteria});\r\n    };\r\n\r\n    changeKeywordHandler = event => {\r\n        this.setState({keyword: event.target.value})\r\n    };\r\n    \r\n    addToCriteriahandler = () => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== \"Keyword\")\r\n        let newCriteria = {\r\n            criteriaName: \"Keyword\",\r\n            data: {\r\n                name: this.state.keyword\r\n            } \r\n        };\r\n        criteria.push(newCriteria);\r\n        this.setState({keyword: '', criteria});\r\n    };\r\n\r\n    removeCriteriaHandler = index => {\r\n        let criteria = [...this.state.criteria];\r\n        criteria.splice(index, 1);\r\n        this.setState({criteria});\r\n    };\r\n\r\n    getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            }\r\n        })\r\n        .then(({data}) => {\r\n            let categories = this.transformCategoriesData(data.categories);\r\n            this.setState({categories});\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    renderRestaurantList = () => {\r\n        if(this.state.restaurants === null) {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.state.restaurants.length > 0){\r\n            return this.state.restaurants.map(({restaurant}) => (\r\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant}/>\r\n            ));\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>No data available. Please select criteria, and click search.</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div className=\"container-fluid\" style={{marginTop: 30, marginBottom: 30}}>\r\n               {this.state.city && (\r\n                     <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <h4 className=\"text-success\">Restaurant in {this.state.city.name}, {\" \"} {this.state.city.country_name}</h4>\r\n                        </div>\r\n                    </div>\r\n               )}\r\n\r\n               <div className=\"row\">\r\n                   <div className=\"col-3\">\r\n                       <h5>Categories</h5>\r\n                       <CategoryList categories={this.state.categories}\r\n                        categorySelected={this.state.categorySelected}\r\n                        categoryClickHandler = {(category) => this.categoryClickHandler(category)}\r\n                       />\r\n                   </div>\r\n                   <div className=\"col\">\r\n                        <SearchKeyword onClickAddToCriteria={this.addToCriteriahandler} keyword={this.state.keyword} changeKeywordHandler={this.changeKeywordHandler} />\r\n                        <SearchCriteria criteria={this.state.criteria} removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)} onClickSearch={this.searchHandler} />\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col\" style={{marginBottom: 10}}>\r\n                                <h4 className=\"text-success\">Restaurant List</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {this.renderRestaurantList()}\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\nimport RatingLabel from '../components/RatingLabel';\r\nconst RestaurantProfile = props =>(\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        {\r\n                            props.restaurant ? (\r\n                                <>\r\n                                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                                <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n                                <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                                </>\r\n                            ) : (\r\n                                <p>Loading...</p>\r\n                            )\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            props.restaurant ? (\r\n                                <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <table className=\"table\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                        <td>Rating</td>\r\n                                        <td>\r\n                                            <RatingLabel labelColor={props.restaurant.user_rating.rating_color}\r\n                                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                                             />\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td>Cuisines</td>\r\n                                        <td>\r\n                                            {props.restaurant.cuisines}\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td>Cost for two</td>\r\n                                        <td>\r\n                                            {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                        </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            ) : (\r\n                                <p>Loading...</p>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div> \r\n\r\n)\r\n\r\nexport default RestaurantProfile;","import React from 'react';\r\nimport RatingLabel from '../components/RatingLabel';\r\n\r\nconst Review = props => (\r\n    <div className=\"card border-success\" style={{marginBottom: 5}}>\r\n        <div className=\"card-body\">\r\n            <div className=\"row\" style={{marginBottom: 20}}>\r\n                <div className=\"col-1\" style={{border: '0px solid black'}}>\r\n                    <img className=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{borderRadius: '50%', width: 80}}></img>\r\n                </div>\r\n                <div className=\"col-11\" style={{border: '0px solid black'}}>\r\n                    <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n                    <RatingLabel text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n                    labelColor={`${props.review.user.foodie_color}`}\r\n                    />\r\n                </div>    \r\n            </div> \r\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n                <RatingLabel text={`${props.review.rating} (${props.review.rating_text})`}  labelColor={`${props.review.rating_color}`} />\r\n                <p className=\"card-text\">{props.review.review_text}</p>   \r\n        </div>\r\n    </div>    \r\n)\r\n\r\nexport default Review;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport RestaurantProfile from '../components/RestaurantProfile';\r\nimport Review from '../components/Review';\r\n\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        };\r\n    }\r\n\r\n    getReviewsData = restaurant_id => {\r\n        let url = `${API.zomato.baseUrl}/reviews`;\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        }).then(({data})=> {\r\n            this.setState({reviews: data.user_reviews});\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    getRestaurantData = restaurant_id => {\r\n        let url = `${API.zomato.baseUrl}/restaurant`;\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({data})=> {\r\n            this.setState({restaurant: data});\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    componentDidMount(){\r\n        let {params} = this.props.match;\r\n        this.getRestaurantData(params.restaurant_id);\r\n        this.getReviewsData(params.restaurant_id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                    <RestaurantProfile restaurant={this.state.restaurant}/>  \r\n\r\n                    <div className=\"col-12\" style={{marginBottom: 20}}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"text-success\" style={{fontWeight: 800}}>\r\n                                    Reviews\r\n                                </h4>\r\n                                {this.state.reviews ? (\r\n                                    this.state.reviews.map(({review}) => (\r\n                                        <Review review={review} key={review.id}\r\n                                        />  \r\n                                    ))\r\n                                ) : (\r\n                                    <p>Loading...</p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>               \r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RestaurantDetail;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home\";\nimport City from \"./pages/City\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport RestaurantDetail from \"./pages/RestaurantDetail\";\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/kuliner/\" exact component={Home}/>\n        <Route path=\"/city/:city_id\"  component={City} />\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail} />\n        <Footer />\n      </Router>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire(\"dotenv\").config();"],"sourceRoot":""}